const redux = require('redux');
const createStore =redux.createStore;
const combineReducers = redux.combineReducers;

//action 

const ADD_HERO = 'ADD_HERO';
const ADD_MOVIE = 'ADD_MOVIE '
// action creator/dispatcher

function addHero (){
    return {
        type : ADD_HERO,
        info : "first redux app'"
    }
}


function addMovie (){
    return {
        type : ADD_MOVIE,
        info : "first redux app'"
    }
}
//Default /initial state

const initialHeroState = {
    numberOfHeroes : 0
   
}

const initialMovieState = {
    
    numberOfMovies : 0
}
// reducer

const heroReducer = (state = initialHeroState,action) => {

    switch(action.type){
        case ADD_HERO : return{
            ...state,
            numberOfHeroes : state.numberOfHeroes +1
        }

       
        default : return state
    }

}

const movieReducer = (state = initialMovieState,action) => {

    switch(action.type){
       

        case ADD_MOVIE : return{
            ...state,
            numberOfMovies : state.numberOfMovies  + 1
        }
        default : return state
    }

}

// combine Reducers
const rootReducer = combineReducers({
    heroes : heroReducer, 
    movies : movieReducer
})
 
// store

const store = createStore(rootReducer);

// subscribe

// store.subscribe(() => {
//     console.log(store.getState())
// })

const unsubscribe = store.subscribe(() => {
    console.log(store.getState())
})

store.dispatch(addHero());
store.dispatch(addMovie());
store.dispatch(addHero());
store.dispatch(addMovie());


// unsubscribe
unsubscribe();
console.log('unsubscribed');
